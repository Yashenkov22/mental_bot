from aiogram import types, Bot, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import BufferedInputFile

from sqlalchemy.ext.asyncio import AsyncSession

from db.queries import add_answer_to_db
from utils.keyboards import quiz_kb, create_main_kb
from utils.states import Quiz
from utils.name_states import response_for_state
from utils.cat_api import get_cat
from utils.delete_message import try_delete_prev_message, add_message_for_delete


quiz_router = Router()


pattern = '''
–ü–æ–ª–∏—Ü–∏—è –≤—ã–≥–æ—Ä–∞–Ω–∏—è —Å –≤–∞–º–∏ –Ω–∞ —Å–≤—è–∑–∏
–û—Ü–µ–Ω–∏—Ç–µ –∑–∞–µ–± –æ—Ç 0 –¥–æ 10

–ì–¥–µ 0  - –ø—Ä–æ—Å—Ç–æ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤—Å–ø–µ–ª–µ—Å–∫ –Ω–∞ —Å–∏—Ç—É–∞—Ü–∏—é
–ì–¥–µ 10 - –æ—Ç–∫—Ä—ã–≤–∞—é —Ñ–∏–≥–º—É —Å —Ñ–æ—Ä–º–æ–π –∏ –≥–ª–∞–∑–∞ –Ω–∞ –º–æ–∫—Ä–æ–º –º–µ—Å—Ç–µ, —á—É–≤—Å—Ç–≤—É—é –æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ
'''



async def start_quiz(bot: Bot, user_id: int, state: FSMContext):
    await try_delete_prev_message(bot, state)

    await state.set_state(Quiz.answer)
    await bot.send_message(user_id,
                           pattern,
                           reply_markup=quiz_kb.as_markup())


@quiz_router.callback_query(Quiz.answer)
async def end_quiz(callback: types.CallbackQuery,
                   state: FSMContext,
                   session: AsyncSession,
                   bot: Bot):
    d = await state.get_data()
    msg = d.get('first_quiz')
    if msg:
        await bot.delete_message(msg.chat.id, msg.message_id)

    answer = callback.data.split('_')[-1]
    await state.update_data(answer=int(answer))
    data = await state.get_data()

    response_for_api = response_for_state(answer)

    await state.clear()
    
    try:
        await add_answer_to_db(session=session, data=data, user_id=callback.from_user.id)
    except Exception:
        await callback.message.answer('–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å')
    else:
        await callback.answer('–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã')
        
        cat_photo = await get_cat(*response_for_api)
        main_kb = create_main_kb(callback.from_user.id)
        await callback.message.answer_photo(BufferedInputFile(cat_photo, 'cat.jpeg'),
                                            caption='–õ–æ–≤–∏ –∫–æ—Ç–∏–∫–∞, –Ω–∞–¥–µ—é—Å—å –æ–Ω –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–µ–±—è —Å–µ–π—á–∞—ÅüòÑ\n–ï—Å–ª–∏ –Ω–µ—Ç, –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–π –±–ª–∏–∑–∫–æ –∫ —Å–µ—Ä–¥—Ü—É, —è –≤—Å–µ–≥–æ –ª–∏—à—å –±–æ—Ç, –Ω–æ —è —Å—Ç–∞—Ä–∞—é—Å—å',
                                            reply_markup=main_kb.as_markup(resize_keyboard=True),
                                            disable_notification=True)
        
    await callback.answer()
    await callback.message.delete()

